from flask import Flask, request, jsonify
import joblib, numpy as np

# Load model
model = joblib.load("crop_model.pkl")

# Load encoders if you saved them
try:
    label_encoders = joblib.load("encoders.pkl")
except:
    label_encoders = {}

app = Flask(__name__)

REQUIRED = ["N","P","K","temperature","humidity","ph","rainfall"]

@app.route("/", methods=["GET"])
def home():
    return {"status": "ok", "message": "Crop Recommendation API is live ðŸš€"}

@app.route("/predict", methods=["POST"])
def predict():
    try:
        data = request.get_json(force=True)
        # build feature vector
        features = [float(data[f]) for f in REQUIRED]

        # categorical (only if your model needs them)
        for key in ["soil_type","season","region"]:
            if key in data and key in label_encoders:
                le = label_encoders[key]
                if data[key] not in le.classes_:
                    return jsonify({"error": f"Invalid {key}. Allowed: {', '.join(le.classes_)}"}), 400
                enc = le.transform([data[key]])[0]
                features.append(int(enc))

        X = np.array(features).reshape(1, -1)
        pred = model.predict(X)[0]

        if "label" in label_encoders:
            pred = label_encoders["label"].inverse_transform([pred])[0]

        return jsonify({"recommended_crop": str(pred)})
    except Exception as e:
        return jsonify({"error": str(e)}), 400

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000, debug=True)
